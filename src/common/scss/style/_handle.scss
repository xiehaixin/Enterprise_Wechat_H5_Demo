
@import "@/common/scss/style/themeColor/_themeColor.scss";
@import "@/common/scss/style/themeStyle/_themeBackground.scss";
//此处用了sass的map遍历、函数、map存取、混合器等相关知识，
//详细API参考https://www.sass.hk/docs/
//遍历主题map
@mixin themeColorify {
  @each $theme-name, $theme-map in $themesColor {
    //!global 把局部变量强升为全局变量
    $theme-map: $theme-map !global;
    //这步是判断html的data-theme的属性值  #{}是sass的插值表达式
    //& sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot
    [data-theme-color="#{$theme-name}"] & {
      @content;
    }
  }
}

@mixin themeBgify {
  @each $theme-name, $theme-map in $themesBackground {
    //!global 把局部变量强升为全局变量
    $theme-map: $theme-map !global;
    //这步是判断html的data-theme的属性值  #{}是sass的插值表达式
    //& sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot
    [data-theme-background="#{$theme-name}"] {
      background: map-get($theme-map, "background");
      background-size: 100% auto;
    }
  }
}



//声明一个根据Key获取颜色的function
@function themed($key) {
  @return map-get($theme-map, $key);
}
//暂时想到的常用的开发场景下面三种背景颜色、字体颜色、边框颜色  至于阴影什么之类的忽略了
//获取背景颜色
@mixin mainBgColor($color:"mainBgColor") {
  @include themeColorify {
    background-color: themed($color);
    color: themed("fontColor");
  }
}
//获取字体颜色
@mixin fontColor($color:"fontColor") {
  @include themeColorify {
    color: themed($color);
  }
}
//获取边框颜色
@mixin borderColor($color:"mainBgColor") {
  @include themeColorify {
    border-color: themed($color);
  }
}

